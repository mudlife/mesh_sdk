C51 COMPILER V9.53.0.0   SPI                                                               07/02/2019 12:32:36 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN .\Objects\spi.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE dev\spi.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(.\app;.\dev;.\os;.\inc) 
                    -DEFINE(LOG,LIGHT) DEBUG OBJECTEXTEND PRINT(.\Listings\spi.lst) TABS(2) OBJECT(.\Objects\spi.obj)

line level    source

   1          /**
   2           * @file spi.c
   3           * @brief SPI操作文件
   4           * @details SPI初始化，SPI读写操作
   5           * @author mudlife
   6           * @par Copyright (c):
   7           *      上海晶曦微电子科技有限公司
   8           * @version 1.0.0
   9           * @date 2019-06-02
  10           */
  11          #include "spi.h"
  12          #include "HC89S003F4.h"
  13          
  14          /** The dummy byte to be written while data is being received */
  15          #define SPI_DUMMY_BYTE      (0xFF)
  16          
  17          /** SPI configurations */
  18          #define SPI_CONFIG  (bmSPI_SSIG | bmSPI_SPEN | bmSPI_MSTR | bmSPI_CPHA |0x00)
  19          
  20          
  21          /**
  22           * SPI interrupt service routine.
  23           */
  24          //void spi_isr(void) interrupt SPI_VECTOR
  25          //{
  26          //    /* NOP */
  27          //}
  28          
  29          
  30          /**
  31           * @brief SPI GPIO初始化
  32           * 
  33           * @return 无
  34           */
  35          static void spi_config_gpio(void)
  36          {
  37   1          P0M1 = (P0M1 & 0x0F) | 0xC0; // CE: P0.3 - push pull
  38   1      
  39   1        
  40   1          P0M2 = (P0M2 & 0X0F) | 0XC0; // SS P0.4 - output push pull; SCK P0.5 - output push pull
  41   1          P0M3 = 0xCC;
  42   1          P2M0 = 0xC6; // MOSI P0.6 - output push pull; MISO P0.7 - input pull-up
  43   1      
  44   1          SS_MAP = 0x05;
  45   1          SCK_MAP = 0x21;
  46   1          MOSI_MAP = 0x07;
  47   1          MISO_MAP = 0x20;
  48   1      
  49   1      }
  50          
  51          
  52          /**
  53           * @brief SPI初始化
  54           * 
C51 COMPILER V9.53.0.0   SPI                                                               07/02/2019 12:32:36 PAGE 2   

  55           * @return 无
  56           */
  57          void spi_init(void)
  58          {
  59   1          /* GPIO configuration */
  60   1          spi_config_gpio();
  61   1          SPI_SS = 1;
  62   1          SPCTL = SPI_CONFIG;
  63   1      
  64   1      }
  65          
  66          /**
  67           * @brief 读写一个byte
  68           * 
  69           * @param val 写入值
  70           * @return 读取到的值
  71           */
  72          u8 spi_read_write(u8 val)
  73          {
  74   1          data u8 dat;
  75   1          SPDAT = val;
  76   1          while (!(SPSTAT & bmSPI_SPIF));
  77   1          dat = SPDAT;
  78   1          SPSTAT = 0x80;
  79   1          return (dat);
  80   1      }
  81          
  82          
  83          
  84          //u8 spi_read_write(u8 val)
  85          //{
  86          //    u8 dat,i;
  87          //    SPI_SCK = 0;
  88          //    for(i=0;i<8;i++){
  89          //      dat <<= 1;
  90          //      SPI_SCK = 1;
  91          //      if(SPI_MISO)
  92          //        dat |= 0x01;
  93          //      if(val&0x80)
  94          //        SPI_MOSI = 1;
  95          //      else
  96          //        SPI_MOSI = 0;
  97          //      SPI_SCK = 0;
  98          //      val <<= 1;
  99          //    }
 100          //    return (dat);
 101          //}
 102          
 103          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     80    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
