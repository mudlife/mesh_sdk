C51 COMPILER V9.53.0.0   PWM                                                               04/10/2019 15:02:15 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\pwm.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE dev\pwm.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(.\app;.\dev;.\inc;.\os;.
                    -\examples) DEFINE(LOG,LIGHT) DEBUG OBJECTEXTEND PRINT(.\Listings\pwm.lst) TABS(2) OBJECT(.\Objects\pwm.obj)

line level    source

   1          #include "HC89S003F4.h"
   2          #include "pwm.h"
   3          #include "delay.h"
   4          #include "network_conf.h"
   5          
   6          //data u8 pwm1;
   7          //data u8 pwm2;
   8          
   9          //data u8 r_val=5;
  10          //data u8 g_val=5;
  11          //data u8 b_val=5;
  12          //data u8 w_val=5;
  13          //data u8 y_val=5;
  14          //data u8 wy_val=5;
  15          
  16          
  17          //#define R_VAL 5
  18          //#define G_VAL 5
  19          //#define B_VAL 5
  20          //#define W_VAL 5
  21          //#define Y_VAL 5
  22          //#define WY_VAL 5
  23          
  24          
  25          //data led_color;
  26          //data u8 led_sta=1;
  27          
  28          //#define WHITE  1
  29          //#define YELLOW 2
  30          //#define W_AND_Y 3
  31          //#define RED  4
  32          //#define GREEN 5
  33          //#define BLUE 6
  34          
  35          
  36          /**
  37           * 功能：PWM初始化
  38           * P00 ,P01 ,P23 , P24 ,P25 
  39           */
  40          void pwm_init(void)
  41          {
  42   1      
  43   1        P2M1 = (P2M1&0x0F)|0xC0; //P23  
  44   1      //  P2M2 = (P2M2&0xFF)|0xCC; //P24 , P25
  45   1        P0M0 = (P0M1&0x00)|0xCC; //P00 , P01
  46   1        
  47   1        
  48   1        PWM01_MAP = 0x23;         //PWM01通道映射P10口
  49   1        PWM0_MAP = 0x01;          //PWM0通道映射P22口
  50   1      //  PWM1_MAP = 0x00;
  51   1      //  PWM11_MAP = 0x24;
  52   1      //  PWM2_MAP = 0x25;
  53   1        PWM0C = 0x03;           //PWM0高有效，PWM01高有效，时钟128分频 0X03
  54   1        PWM0EN = 0x0F;            //使能PWM0，工作于独立模式
C51 COMPILER V9.53.0.0   PWM                                                               04/10/2019 15:02:15 PAGE 2   

  55   1        
  56   1      //  
  57   1      //  PWM0C = 0x00;           //PWM0高有效，PWM01高有效，时钟8分频 0X01
  58   1      //  PWM0EN = 0x0F;            //使能PWM0，工作于独立模式
  59   1      //  
  60   1      //  
  61   1      //  PWM1C = 0x00;           //PWM1高有效，PWM11高有效，时钟8分频 0X01
  62   1      //  PWM1EN = 0x0F;            //使能PWM1，工作于独立模式
  63   1      //  
  64   1      //  PWM2C = 0x00;           //PWM2高有效，PWM11高有效，时钟8分频 0X01
  65   1      //  PWM2EN = 0x0F;            //使能PWM1，工作于独立模式
  66   1        
  67   1      
  68   1        //独立模式下，PWM0和PWM01共用一个周期寄存器
  69   1        //PWM0的占空比调节使用      PWM0组的占空比寄存器
  70   1        //PWM01的占空比调节使用     PWM0组的死区寄存器
  71   1      
  72   1        //周期计算  = 0x0064 / (Fosc / PWM分频系数)   （Fosc见系统时钟配置的部分）
  73   1        //      = 0x0064 / (16000000 / 128)     
  74   1        //      = 125   /125000
  75   1        //      = 1000us          约1KHz
  76   1      
  77   1        PWM0PH = 0x00;            //周期高4位设置为0x03
  78   1        PWM0PL = 0x64;            //周期低8位设置为0xFF
  79   1        
  80   1        
  81   1      //  PWM1PH = 0x01;            //周期高4位设置为0x03
  82   1      //  PWM1PL = 0x40;            //周期低8位设置为0xFF
  83   1      //  
  84   1      //  
  85   1      //  PWM2PH = 0x01;            //周期高4位设置为0x03
  86   1      //  PWM2PL = 0x40;            //周期低8位设置为0xFF
  87   1        
  88   1        
  89   1      
  90   1        //占空比计算= 0x0155 / (Fosc / PWM分频系数)   （Fosc见系统时钟配置的部分）
  91   1        //      = 0x0155 / (16000000 / 8)     
  92   1        //      = 341    / 2000000
  93   1        //      = 170.5us      占空比为 170.5/511.5 = 33.3%
  94   1      
  95   1        PWM0DH = 0x00;            //PWM0高4位占空比0x05
  96   1        PWM0DL = 0x0B;          //PWM0低8位占空比0x55
  97   1        PWM0DTH = 0x00;           //PWM01高4位占空比0x01
  98   1        PWM0DTL = 0x0B;           //PWM01低8位占空比0x55
  99   1        
 100   1      //  PWM1DH = 0x00;            //PWM0高4位占空比0x05
 101   1      //  PWM1DL = 0xC8;            //PWM0低8位占空比0x55
 102   1      //  PWM1DTH = 0x00;           //PWM01高4位占空比0x01
 103   1      //  PWM1DTL = 0xC8;           //PWM01低8位占空比0x55
 104   1      //  
 105   1      //  
 106   1      //  PWM2DH = 0x00;            //PWM0高4位占空比0x05
 107   1      //  PWM2DL = 0xC8;            //PWM0低8位占空比0x55
 108   1      //  PWM2DTH = 0x00;           //PWM01高4位占空比0x01
 109   1      //  PWM2DTL = 0xC8;           //PWM01低8位占空比0x55
 110   1        
 111   1      //  pwm1 = 0x30;
 112   1      //  pwm2 = 0x30;
 113   1      //  pwm_off();
 114   1      }
 115          
 116          
C51 COMPILER V9.53.0.0   PWM                                                               04/10/2019 15:02:15 PAGE 3   

 117          //void pwm_trig(void)
 118          //{
 119          //  if(led_sta == 1){
 120          //    pwm_off();
 121          //  }else{
 122          //    pwm_on();
 123          //  }
 124          ////  if(PWM0EN == 0x0F){
 125          ////  PWM0EN = 0x08;            //失能PWM0
 126          ////  }else{
 127          ////  PWM0EN = 0x0F;            //使能PWM0，工作于独立模式
 128          ////  }
 129          //}
 130          
 131          
 132          void pwm_on(void)
 133          {
 134   1      //  u8 i;
 135   1      //  u8 p1=5,p2=5;
 136   1        local_info.led_sta = 1;
 137   1      //  for(i=0;i<100;i++){
 138   1      //      p2 = pwm2*i/100;
 139   1      //      p1 = pwm1*i/100;
 140   1      //      PWM0DH = 0;           //PWM0高4位占空比0x05
 141   1      //      PWM0DL = p1;            //PWM0低8位占空比0x55
 142   1      //      
 143   1      //      PWM0DTH = 0;            //PWM01高4位占空比0x01
 144   1      //      PWM0DTL = p2;           //PWM01低8位占空比0x55
 145   1      //      delay_ms(10);
 146   1      //  }
 147   1      //  
 148   1      //    PWM0DH = 0;           //PWM0高4位占空比0x05
 149   1      //    PWM0DL = pwm1;            //PWM0低8位占空比0x55
 150   1      //    
 151   1      //    PWM0DTH = 0;            //PWM01高4位占空比0x01
 152   1      //    PWM0DTL = pwm2;           //PWM01低8位占空比0x55
 153   1        
 154   1        
 155   1        
 156   1        PWM0EN = 0x0F;//0X0F
 157   1      
 158   1      }
 159          
 160          void pwm_off(void)
 161          {
 162   1        
 163   1      //  u8 i=1;
 164   1      //  u8 p1=5,p2=5;
 165   1        local_info.led_sta = 0;
 166   1      //    for(i=0;i<100;i++){
 167   1      //      p2 = pwm2 - pwm2*i/100+5;
 168   1      //      p1 = pwm1 - pwm1*i/100+5;
 169   1      //      PWM0DH = 0;           //PWM0高4位占空比0x05
 170   1      //      PWM0DL = p1;            //PWM0低8位占空比0x55
 171   1      //      
 172   1      //      PWM0DTH = 0;            //PWM01高4位占空比0x01
 173   1      //      PWM0DTL = p2;           //PWM01低8位占空比0x55
 174   1      //      delay_ms(10);
 175   1      //    }
 176   1      
 177   1      
 178   1      //  
C51 COMPILER V9.53.0.0   PWM                                                               04/10/2019 15:02:15 PAGE 4   

 179   1      //    PWM0DH = 0;           //PWM0高4位占空比0x05
 180   1      //    PWM0DL = 5;           //PWM0低8位占空比0x55
 181   1      //    
 182   1      //    PWM0DTH = 0;            //PWM01高4位占空比0x01
 183   1      //    PWM0DTL = 5;            //PWM01低8位占空比0x55
 184   1      //  
 185   1        
 186   1        PWM0EN = 0x08;  
 187   1      }
 188          
 189          //void pwm_set(u8 led)
 190          //{
 191          //  if(led){
 192          //    pwm_on();
 193          //  }else{
 194          //    pwm_off();
 195          //  }
 196          //}
 197          //void pwm_set_wy(u8 w,u8 y)
 198          //{
 199          //  data u16 v;
 200          //  pwm1 = w;
 201          //  pwm2 = y;
 202          //  pwm_off();
 203          //  v = (u8)w*2.5;
 204          //  if(v < 2) v = 2;
 205          //  if(v >75) v = 75;
 206          //  PWM0DH = v>>8&0xFF;           //PWM0高4位占空比0x05
 207          //  PWM0DL = v&0xFF;            //PWM0低8位占空比0x55
 208          //  v = (u8)y*2.5 ;
 209          //  if(v < 2) v = 2;
 210          //  if(v >75) v = 75;
 211          //  PWM0DTH = v>>8&0xFF;            //PWM01高4位占空比0x01
 212          //  PWM0DTL = v&0xFF;           //PWM01低8位占空比0x55
 213          //  pwm_on();
 214          //}
 215          
 216          
 217          
 218          
 219          //void pwm_set_w(u8 w)
 220          //{
 221          //  data u16 v;
 222          //  w_val = w;
 223          //  PWM0EN = 0x08;
 224          //  v = (u8)w*2.5;
 225          //  if(v >250) v = 250;
 226          //  PWM0DH = v>>8&0xFF;           //PWM0高4位占空比0x05
 227          //  PWM0DL = v&0xFF;            //PWM0低8位占空比0x55
 228          //  PWM0EN = 0x0F;
 229          //}
 230          
 231          //void pwm_set_y(u8 y)
 232          //{
 233          //  data u16 v;
 234          //  y_val = y;
 235          //  PWM0EN = 0x08;
 236          //  v = (u8)y*2.5;
 237          //  if(v >250) v = 250;
 238          //  PWM0DTH = v>>8&0xFF;            //PWM01高4位占空比0x01
 239          //  PWM0DTL = v&0xFF;           //PWM01低8位占空比0x55
 240          //  PWM0EN = 0x0F;
C51 COMPILER V9.53.0.0   PWM                                                               04/10/2019 15:02:15 PAGE 5   

 241          //}
 242          
 243          //void pwm_set_rgb(u8 r,u8 g,u8 b)
 244          //{
 245          ////  data u16 v;
 246          ////  r_val = r;
 247          ////  g_val = g;
 248          ////  b_val = b;
 249          ////  //pwm_off();
 250          ////  wy_off();
 251          ////  PWM1EN = 0x0F;
 252          ////  PWM2EN = 0x0F;
 253          ////  delay_ms(2);
 254          //  
 255          //  if(r!=0)  led_color=RED;
 256          //  else if(g!=0)  led_color=GREEN;
 257          //  else if(b!=0)  led_color=BLUE;
 258          ////  
 259          ////  v = (u8)r*2.5;
 260          ////  if(v >250) v = 250;
 261          ////  PWM1DH = v>>8&0xFF;           //PWM0高4位占空比0x05
 262          ////  PWM1DL = v&0xFF;            //PWM0低8位占空比0x55
 263          ////  v = (u8)g*2.5;
 264          ////  if(v >250) v = 250;
 265          ////  PWM1DTH = v>>8&0xFF;            //PWM01高4位占空比0x01
 266          ////  PWM1DTL = v&0xFF;           //PWM01低8位占空比0x55
 267          ////  v = (u8)b*2.5;
 268          ////  if(v >250) v = 250;
 269          ////  
 270          ////  PWM2DH =  v>>8&0xFF;            //PWM0高4位占空比0x05
 271          ////  PWM2DL = v&0xFF;            //PWM0低8位占空比0x55
 272          ////  
 273          ////  PWM1EN = 0x0F;
 274          ////  PWM2EN = 0x0F;
 275          //}
 276          
 277          
 278          //void pwm_set_default(u8 model)
 279          //{
 280          //    switch(model){
 281          //        case LED_MODEL_R:
 282          //          pwm_set_rgb(R_VAL,0,0);
 283          //        break;
 284          //        case LED_MODEL_G:
 285          //          pwm_set_rgb(0,G_VAL,0);
 286          //        break;
 287          //        case LED_MODEL_B:
 288          //          pwm_set_rgb(0,0,B_VAL);
 289          //        break;
 290          //        case LED_MODEL_W:
 291          //          pwm_set_wy(0,W_VAL);
 292          //        break;
 293          //        case LED_MODEL_Y:
 294          //          pwm_set_wy(Y_VAL,0);
 295          //        break;
 296          //        case LED_MODEL_WY:
 297          //          pwm_set_wy(Y_VAL,W_VAL);
 298          //        break;
 299          //        
 300          //        
 301          //      }
 302          //}
C51 COMPILER V9.53.0.0   PWM                                                               04/10/2019 15:02:15 PAGE 6   

 303          
 304          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     69    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
